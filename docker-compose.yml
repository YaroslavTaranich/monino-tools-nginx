services:
  reverse-proxy:
    image: jwilder/nginx-proxy
    container_name: nginx-proxy
    labels:
      - "com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy=true"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./certs:/etc/nginx/certs
      - ./vhost.d:/etc/nginx/vhost.d
      - ./html:/usr/share/nginx/html
      - ./acme.sh:/etc/acme.sh
    networks:
      - app-network

  letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    container_name: letsencrypt
    depends_on:
      - reverse-proxy
    environment:
      NGINX_PROXY_CONTAINER: nginx-proxy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./certs:/etc/nginx/certs
      - ./vhost.d:/etc/nginx/vhost.d
      - ./html:/usr/share/nginx/html
      - ./acme.sh:/etc/acme.sh
    networks:
      - app-network

  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 10
    expose:
      - 5432
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - app-network

  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
      VIRTUAL_HOST: pgadmin.moninotools.ru
      VIRTUAL_PORT: 80
      VIRTUAL_PROTO: http
      HTTPS_REDIRECT: false
      HTTPS_METHOD: noredirect
      LETSENCRYPT_HOST: pgadmin.moninotools.ru
      LETSENCRYPT_EMAIL: ${ADMIN_EMAIL}
    depends_on:
      - postgres
    networks:
      - app-network

  api:
    build: ./api
    environment:
      VIRTUAL_HOST: api.moninotools.ru
      VIRTUAL_PORT: 3000
      VIRTUAL_PROTO: http
      HTTPS_REDIRECT: false
      HTTPS_METHOD: noredirect
      LETSENCRYPT_HOST: api.moninotools.ru
      LETSENCRYPT_EMAIL: ${ADMIN_EMAIL}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_HOST: "postgres"
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PORT: "5432"
      JWT_SECRET: ${JWT_SECRET}
      PORT: "3000"
    volumes:
      - static-data:/app/static
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app-network

  admin:
    build: ./admin
    environment:
      VIRTUAL_PROTO: http
      HTTPS_REDIRECT: false
      HTTPS_METHOD: noredirect
      VIRTUAL_PORT: 80
      VIRTUAL_HOST: admin.moninotools.ru
      LETSENCRYPT_HOST: admin.moninotools.ru
      LETSENCRYPT_EMAIL: ${ADMIN_EMAIL}
    depends_on:
      - reverse-proxy
      - letsencrypt
    networks:
      - app-network

  user:
    build: ./user
    environment:
      VIRTUAL_PROTO: http
      HTTPS_REDIRECT: false
      HTTPS_METHOD: noredirect
      VIRTUAL_HOST: moninotools.ru
      VIRTUAL_PORT: 3000
      LETSENCRYPT_HOST: moninotools.ru
      LETSENCRYPT_EMAIL: ${ADMIN_EMAIL}
      NEXT_PUBLIC_API_URL: https://api.moninotools.ru
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
    depends_on:
      - api
      - reverse-proxy
      - letsencrypt
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  pgdata:
  static-data:
